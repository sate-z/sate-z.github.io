{"meta":{"title":"SateZheng","subtitle":"多读书，多看报，少吃零食，多睡觉","description":null,"author":"SateZheng","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"Python_递归","slug":"Python-递归","date":"2016-12-15T03:10:37.000Z","updated":"2016-12-15T03:14:06.000Z","comments":true,"path":"2016/12/15/Python-递归/","link":"","permalink":"http://yoursite.com/2016/12/15/Python-递归/","excerpt":"","text":"Python 递归递归：函数对自身定义的引用。 每次函数调用时，针对这个调用的新命名空间会被创建，意味着当函数调用“自身”时，实际上运行的是两个不同的函数（或者说同一个函数具有两个不同的命名空间）。 阶乘计算数 n 的阶乘(n * (n-1) * (n-2) .. * 1)： 1234567891011121314# for 循环实现def fac(n): result = n for i in range(1, n): result *= i return result # 递归实现def fac(n):def rec_fac(n): if n == 1: return n else: return n * rec_fac(n - 1) 二分法12345678910111213def search(sequence, number, lower=0, upper=None): if upper is None: upper = len(sequence) - 1 if lower == upper: assert number == sequence[upper] return upper else: middle = (lower + upper)//2 if number &gt; sequence[middle]: return search(sequence, number, middle+1, upper) else: return search(sequence, number, lower, middle) 查找目录下的所有文件123456def Test(rootDir): for lists in os.listdir(rootDir): path = os.path.join(rootDir, lists) print path if os.path.isdir(path): Test(path)","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Hello World","slug":"hello-world","date":"2016-12-14T10:17:21.000Z","updated":"2016-12-14T10:17:21.000Z","comments":true,"path":"2016/12/14/hello-world/","link":"","permalink":"http://yoursite.com/2016/12/14/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}